name: unit-tests

on: [push, pull_request]

jobs:
    test:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v1
      - uses: olafurpg/setup-scala@v5
        with:
          java-version: openjdk@1.12
          sbt-version: 1.3.0
      - name: Run Cassandra
        env:
            CASSANDRA_CONT_NAME: cassandra
            CASSANDRA_PORT: 9042
        run: |
            # Download useful scripts to initialize the Cassandra database.
            wget https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh  -O ./wait-for-it.sh
            chmod +x ./wait-for-it.sh
            mkdir -p share
            wget https://raw.githubusercontent.com/cetic/tsorage-storage/dev/cassandra_prod.cql -O ./share/cassandra_init.cql
            wget https://raw.githubusercontent.com/cetic/tsorage-storage/dev/test_data.cql -O ./share/test_data.cql
            # Run a Cassandra container.
            docker run --name $CASSANDRA_CONT_NAME --publish $CASSANDRA_PORT:9042 -d -v $PWD/share:/share cassandra:3.11
      - name: Initialize Cassandra
        env:
            CASSANDRA_CONT_NAME: cassandra
            CASSANDRA_PORT: 9042
        run: |
            # Get the Cassandra container's IP.
            CASSANDRA_HOST=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $CASSANDRA_CONT_NAME)
            # Wait until the Cassandra container is up.
            ./wait-for-it.sh $CASSANDRA_HOST:9042 --strict --timeout=600
            # Create database schema.
            docker exec cassandra cqlsh -f /share/cassandra_init.cql
            # Insert test data.
            docker exec cassandra cqlsh -f /share/test_data.cql
      - name: Compile the source code
        id: sbt
        uses: lokkju/github-action-sbt@master
        with:
          commands: compile
      - name: Run unit tests
        id: sbt
        uses: lokkju/github-action-sbt@master
        with:
          commands: test
